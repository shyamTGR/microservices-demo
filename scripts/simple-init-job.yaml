apiVersion: batch/v1
kind: Job
metadata:
  name: simple-alloydb-init
spec:
  template:
    spec:
      serviceAccountName: shoppingassistantservice
      restartPolicy: Never
      containers:
      - name: init
        image: gcr.io/wise-karma-472219-r2/shoppingassistantservice:fixed-v2
        command: ["python3", "-c"]
        args:
        - |
          import os
          import sys
          import asyncio
          import logging
          from google.cloud import secretmanager_v1
          from langchain_google_alloydb_pg import AlloyDBEngine, AlloyDBVectorStore
          from langchain_google_genai import GoogleGenerativeAIEmbeddings
          
          logging.basicConfig(level=logging.INFO)
          logger = logging.getLogger(__name__)
          
          # Product data from products.json
          PRODUCTS = [
              {"id": "OLJCESPC7Z", "name": "Sunglasses", "description": "Add a modern touch to your outfits with these sleek aviator sunglasses.", "categories": ["accessories"]},
              {"id": "66VCHSJNUP", "name": "Tank Top", "description": "Perfectly cropped cotton tank, with a scooped neckline.", "categories": ["clothing", "tops"]},
              {"id": "1YMWWN1N4O", "name": "Watch", "description": "This gold-tone stainless steel watch will work with most of your outfits.", "categories": ["accessories"]},
              {"id": "L9ECAV7KIM", "name": "Loafers", "description": "A neat addition to your summer wardrobe.", "categories": ["footwear"]},
              {"id": "2ZYFJ3GM2N", "name": "Hairdryer", "description": "This lightweight hairdryer has 3 heat and speed settings. It's perfect for travel.", "categories": ["hair", "beauty"]},
              {"id": "0PUK6V6EV0", "name": "Candle Holder", "description": "This small but intricate candle holder is an excellent gift.", "categories": ["decor", "home"]},
              {"id": "LS4PSXUNUM", "name": "Salt & Pepper Shakers", "description": "Add some flavor to your kitchen.", "categories": ["kitchen", "home"]},
              {"id": "9SIQT8TOJO", "name": "Vintage Typewriter", "description": "This typewriter looks good in your living room.", "categories": ["vintage", "decor", "home"]},
              {"id": "6E92ZMYYFZ", "name": "Film Camera", "description": "This camera looks like it's a few decades old but it's actually brand new.", "categories": ["photography", "vintage"]}
          ]
          
          def init_database():
              logger.info("Starting AlloyDB initialization...")
              
              PROJECT_ID = os.environ["PROJECT_ID"]
              REGION = os.environ["REGION"]
              ALLOYDB_DATABASE_NAME = os.environ["ALLOYDB_DATABASE_NAME"]
              ALLOYDB_TABLE_NAME = os.environ["ALLOYDB_TABLE_NAME"]
              ALLOYDB_CLUSTER_NAME = os.environ["ALLOYDB_CLUSTER_NAME"]
              ALLOYDB_INSTANCE_NAME = os.environ["ALLOYDB_INSTANCE_NAME"]
              ALLOYDB_SECRET_NAME = os.environ["ALLOYDB_SECRET_NAME"]
              
              # Get password from Secret Manager
              logger.info("Getting password from Secret Manager...")
              secret_manager_client = secretmanager_v1.SecretManagerServiceClient()
              secret_name = secret_manager_client.secret_version_path(project=PROJECT_ID, secret=ALLOYDB_SECRET_NAME, secret_version="latest")
              secret_request = secretmanager_v1.AccessSecretVersionRequest(name=secret_name)
              secret_response = secret_manager_client.access_secret_version(request=secret_request)
              PGPASSWORD = secret_response.payload.data.decode("UTF-8").strip()
              
              logger.info("Creating AlloyDB engine...")
              engine = AlloyDBEngine.from_instance(
                  project_id=PROJECT_ID,
                  region=REGION,
                  cluster=ALLOYDB_CLUSTER_NAME,
                  instance=ALLOYDB_INSTANCE_NAME,
                  database=ALLOYDB_DATABASE_NAME,
                  user="postgres",
                  password=PGPASSWORD
              )
              
              logger.info("Creating vector store...")
              vectorstore = AlloyDBVectorStore.create_sync(
                  engine=engine,
                  table_name=ALLOYDB_TABLE_NAME,
                  embedding_service=GoogleGenerativeAIEmbeddings(model="models/embedding-001"),
                  id_column="id",
                  content_column="description",
                  embedding_column="product_embedding",
                  metadata_columns=["id", "name", "categories"]
              )
              
              logger.info("Adding products to vector store...")
              texts = []
              metadatas = []
              ids = []
              
              for product in PRODUCTS:
                  texts.append(product["description"])
                  metadatas.append({
                      "id": product["id"],
                      "name": product["name"],
                      "categories": product["categories"]
                  })
                  ids.append(product["id"])
              
              vectorstore.add_texts(texts=texts, metadatas=metadatas, ids=ids)
              
              logger.info(f"âœ… Successfully added {len(PRODUCTS)} products to vector store")
              
              # Test the vector store
              logger.info("Testing vector search...")
              results = vectorstore.similarity_search("stylish accessories", k=3)
              logger.info("âœ… Vector search test results:")
              for result in results:
                  logger.info(f"  - {result.metadata.get('name', 'Unknown')}: {result.page_content[:50]}...")
              
              logger.info("ðŸŽ‰ Database initialization completed successfully!")
          
          try:
              init_database()
              logger.info("SUCCESS: AlloyDB initialization complete")
          except Exception as e:
              logger.error(f"FAILED: {e}")
              import traceback
              traceback.print_exc()
              sys.exit(1)
        env:
        - name: GOOGLE_API_KEY
          value: AIzaSyCjvgLUncC4iVQlff_CwUXmAihYDvqEW74
        - name: ALLOYDB_CLUSTER_NAME
          value: onlineboutique-cluster
        - name: ALLOYDB_INSTANCE_NAME
          value: onlineboutique-instance
        - name: ALLOYDB_DATABASE_NAME
          value: products
        - name: ALLOYDB_TABLE_NAME
          value: catalog_items
        - name: ALLOYDB_SECRET_NAME
          value: alloydb-secret
        - name: PROJECT_ID
          value: wise-karma-472219-r2
        - name: REGION
          value: us-central1
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 512Mi
  backoffLimit: 2